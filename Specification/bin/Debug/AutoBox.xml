<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoBox</name>
    </assembly>
    <members>
        <member name="M:AutoBox.Interceptors.MethodInterceptor.#ctor(System.Type)">
            <summary>
            Initializes the <see cref="T:AutoBox.Interceptors.MethodInterceptor"/> class.
            </summary>
            <param name="targetType">Target type</param>
        </member>
        <member name="M:AutoBox.MethodHandler.Resolve(System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Resolves the handler for the specific config item.
            </summary>
        </member>
        <member name="M:AutoBox.MethodHash.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Initializes the new instance of <see cref="!:MethodInfoKey"/> class.
            </summary>
            <param name="methodInfo">Target <see cref="T:System.Reflection.MethodInfo"/> instance</param>
        </member>
        <member name="T:AutoBox.Abstraction.ICacheProvider">
            <summary>
            Cache store entry provider.
            </summary>
        </member>
        <member name="M:AutoBox.Abstraction.ICacheProvider.GetObject(System.String)">
            <summary>
            Gets the cached object for the specific key.
            </summary>
        </member>
        <member name="M:AutoBox.Abstraction.ICacheProvider.SetObject(System.String,System.Object,System.DateTime)">
            <summary>
            Sets the object to cache store for the specific key and sets the expiry date.
            </summary>
        </member>
        <member name="M:AutoBox.Abstraction.IInterceptorSettings.Create(System.Type)">
            <summary>
            Creates the proxy for the target type.
            </summary>
        </member>
        <member name="M:AutoBox.ProxyGenerator.#ctor(AutoBox.Abstraction.IMethodInterceptor)">
            <summary>
            Initializes the new instance of  <see cref="T:AutoBox.ProxyGenerator"/> class.
            </summary>
            <param name="interceptor">Target method interceptor to invoke.</param>
        </member>
        <member name="M:AutoBox.ProxyGenerator.Create(System.Type)">
            <summary>
            Creates the proxy for the target type.
            </summary>
        </member>
        <member name="T:AutoBox.Resolver.Abstraction.IResolver">
            <summary>
            Defines assembly to resolve.
            </summary>
        </member>
        <member name="P:AutoBox.Resolver.Abstraction.IResolver.Assembly">
            <summary>
            Gets the target assembly to resolve type from.
            </summary>
        </member>
        <member name="M:AutoBox.Resolver.AssemblyResolver.#ctor(System.Reflection.Assembly)">
            <summary>
            Initializes the insance of the <see cref="T:AutoBox.Resolver.AssemblyResolver"/> class.
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="P:AutoBox.Resolver.AssemblyResolver.Assembly">
            <summary>
            Gets the target assembly to resolve type from.
            </summary>
        </member>
        <member name="T:AutoBox.Ast.Abstraction.ExpressionVisitor">
            <summary>
            Expression visitor 
            </summary>
        </member>
        <member name="M:AutoBox.Ast.Abstraction.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Visits expression and delegates call to different to branch.
            </summary>
            <param name="expression">Target expression</param>
            <returns>Original expression</returns>
        </member>
        <member name="M:AutoBox.Ast.Abstraction.ExpressionVisitor.VisiParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits parameter expression.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:AutoBox.Ast.Abstraction.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visits the constance expression. To be implemented by user.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:AutoBox.Ast.Abstraction.ExpressionVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits the memeber access expression. To be implemented by user.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:AutoBox.Ast.Abstraction.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits the method call expression. To be implemented by user.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:AutoBox.Ast.Abstraction.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits the binary expression.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:AutoBox.Ast.Abstraction.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits the unary expression.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:AutoBox.Ast.Abstraction.ExpressionVisitor.VisitLamda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Visits the lamda expression.
            </summary>
            <param name="lambdaExpression"></param>
            <returns></returns>
        </member>
        <member name="M:AutoBox.Ast.Abstraction.ExpressionVisitor.VisitNewArrayInit(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Visits the new array init expression. To be implemented by user.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="P:AutoBox.Ast.MethodVisitor.Method">
            <summary>
            Gets the method associated with the current expresssion.
            </summary>
        </member>
        <member name="P:AutoBox.Ast.MethodVisitor.Arguments">
            <summary>
            Gets the array of arguments.
            </summary>
        </member>
        <member name="M:AutoBox.Utility.GetUniqueKey(AutoBox.Handlers.CacheMethodHandler)">
            <summary>
            Cretes the unique md5 key from object hashcode.
            </summary>
        </member>
        <member name="T:AutoBox.Resolve">
            <summary>
            Defines methods to resolve assembly under which the container will initialize.
            </summary>
        </member>
        <member name="P:AutoBox.Resolve.FromCurrentAssembly">
            <summary>
            Resolve assembly from current.
            </summary>
        </member>
        <member name="P:AutoBox.Ast.ArgumentVisitor.Value">
            <summary>
            Gets extracted value for the argument.
            </summary>
        </member>
        <member name="P:AutoBox.Ast.ArgumentVisitor.Type">
            <summary>
            Gets the type of the current argument.
            </summary>
        </member>
        <member name="P:AutoBox.Ast.ArgumentVisitor.IsVariable">
            <summary>
            Gets a value indicating that the argument is a varaible type.
            </summary>
        </member>
        <member name="M:AutoBox.Abstraction.IConfigurationItemImpl.InvalidateDependencies">
            <summary>
            Invalidates all the methods for the underlying call.
            </summary>
        </member>
        <member name="P:AutoBox.Abstraction.IConfigurationItemImpl.InValidated">
            <summary>
            Gets or sets a value indicating the calling method is invalidated.
            </summary>
        </member>
        <member name="P:AutoBox.Abstraction.IConfigurationItemImpl.CacheDuration">
            <summary>
            Gets the cache duration defined for the calling method.
            </summary>
        </member>
        <member name="T:AutoBox.Abstraction.ISpecific">
            <summary>
            Marks that the implemented type should be handled specifically
            </summary>
        </member>
        <member name="M:AutoBox.Configuration.#ctor">
            <summary>
            Initializes the new instance of <see cref="T:AutoBox.Configuration"/> class.
            </summary>
        </member>
        <member name="M:AutoBox.Configuration.GetConfigItem(AutoBox.Abstraction.IMethodMetaData)">
            <summary>
            Gets the config item for the target method.
            </summary>
            <param name="methodMetaData">Defines the method metadata</param>
            <returns></returns>
        </member>
        <member name="M:AutoBox.Abstraction.IMethodInvocation.Continue">
            <summary>
            Continue to original method.
            </summary>
        </member>
        <member name="M:AutoBox.Abstraction.IMethodInvocation.SetReturn(System.Object)">
            <summary>
            Sets the the specific return value.
            </summary>
        </member>
        <member name="P:AutoBox.Abstraction.IMethodInvocation.Method">
            <summary>
            Gets the target method.
            </summary>
        </member>
        <member name="P:AutoBox.Abstraction.IMethodInvocation.Arguments">
            <summary>
            Gets the invoked arguments.
            </summary>
        </member>
        <member name="M:AutoBox.Abstraction.IConfigurationItem`1.Caches(System.TimeSpan)">
            <summary>
            Specifies the cache duration.
            </summary>
        </member>
        <member name="M:AutoBox.Abstraction.IConfigurationItem`1.Invalidates(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Invalides the cache for the specific call.
            </summary>
        </member>
        <member name="P:AutoBox.Containers.TypeContainer.Instances">
            <summary>
            Gets the instances associated with the current container.
            </summary>
        </member>
        <member name="P:AutoBox.Containers.TypeContainer.Id">
            <summary>
            Gets the unique id of the container.
            </summary>
        </member>
        <member name="T:AutoBox.ConfigurationItem`1">
            <summary>
            Defines various config setting items.
            </summary>
        </member>
        <member name="M:AutoBox.ConfigurationItem`1.InvalidateDependencies">
            <summary>
            Marks the member to invalidate its cache duration.
            </summary>
        </member>
        <member name="M:AutoBox.ConfigurationItem`1.Invalidates(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Invalides the cache for the specific call.
            </summary>
        </member>
        <member name="M:AutoBox.ConfigurationItem`1.Caches(System.TimeSpan)">
            <summary>
            Specifies the cache duration.
            </summary>
        </member>
        <member name="P:AutoBox.ConfigurationItem`1.CacheDuration">
            <summary>
            Gets the cache duration defined for the calling method.
            </summary>
        </member>
        <member name="P:AutoBox.ConfigurationItem`1.InValidated">
            <summary>
            Gets a value indicating the calling method is invalidated.
            </summary>
        </member>
        <member name="M:AutoBox.Abstraction.IHandler.Invoke(System.Object,AutoBox.Abstraction.IMethodInvocation)">
            <summary>
            Invokes the method defined for the current config.
            </summary>
        </member>
        <member name="T:AutoBox.MethodInvocation">
            <summary>
            Wraps the dynamic method invocation.
            </summary>
        </member>
        <member name="M:AutoBox.MethodInvocation.#ctor(System.Object,System.Reflection.MethodInfo,System.Object[])">
            <summary>
            Initializes the new instance of the <see cref="T:AutoBox.MethodInvocation"/> class.
            </summary>
            <param name="target">Target instance</param>
            <param name="method">Method that wraps the invocation</param>
            <param name="arguments">Arguments pass during invocation</param>
        </member>
        <member name="M:AutoBox.MethodInvocation.SetReturn(System.Object)">
            <summary>
            Sets the specific return value.
            </summary>
        </member>
        <member name="M:AutoBox.MethodInvocation.Continue">
            <summary>
            Marks to invoke the original mehtod invocation.
            </summary>
        </member>
        <member name="P:AutoBox.MethodInvocation.InvokeOriginal">
            <summary>
            Gets a value indicating whether to call the original implementation for the method.
            </summary>
        </member>
        <member name="P:AutoBox.MethodInvocation.ReturnValue">
            <summary>
            Gets the return value.
            </summary>
        </member>
        <member name="P:AutoBox.MethodInvocation.Method">
            <summary>
            Gets the target method.
            </summary>
        </member>
        <member name="P:AutoBox.MethodInvocation.Arguments">
            <summary>
            Gets the invoked arguments.
            </summary>
        </member>
        <member name="T:AutoBox.Box">
            <summary>
            Entry-point for initalizing model depndencies and caching.
            </summary>
        </member>
        <member name="M:AutoBox.Box.Init">
            <summary>
            Initalizes dependencies and caching handlers for current project.
            </summary>
        </member>
        <member name="M:AutoBox.Box.Init(AutoBox.Resolver.Abstraction.IResolver)">
            <summary>
            Initalizes dependencies and caching handlers for specific assembly.
            </summary>
        </member>
        <member name="M:AutoBox.Box.Setup``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Defines specific config for a particular member.
            </summary>
        </member>
        <member name="M:AutoBox.Box.Setup``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Defines specific config for a particular member.
            </summary>
        </member>
        <member name="M:AutoBox.Argument.Validate(System.Object)">
            <summary>
            Validates the specific argument for equality.
            </summary>
        </member>
        <member name="P:AutoBox.Argument.Id">
            <summary>
            Gets the unique id for the current argument.
            </summary>
        </member>
        <member name="T:AutoBox.Handlers.CacheMethodHandler">
            <summary>
            Cache handler
            </summary>
        </member>
        <member name="M:AutoBox.Handlers.CacheMethodHandler.#ctor(System.String,System.TimeSpan,System.Boolean,System.Object[])">
            <summary>
            Initializes the new instance of <see cref="T:AutoBox.Handlers.CacheMethodHandler"/> class.
            </summary>
            <param name="key">Target key for which the object will be stored.</param>
            <param name="cacheDuration">Target cache duration</param>
        </member>
        <member name="M:AutoBox.Factories.CacheProviderFactory.Create">
            <summary>
            Creates the cache provider from config.
            </summary>
            <returns></returns>
        </member>
        <member name="T:AutoBox.Arg">
            <summary>
            Defines arguments behaviors.
            </summary>
        </member>
        <member name="M:AutoBox.MethodMetaData.#ctor(System.Reflection.MethodInfo,AutoBox.Argument[])">
            <summary>
            Initializes the new instance of <see cref="T:AutoBox.MethodMetaData"/> class.
            </summary>
        </member>
        <member name="M:AutoBox.MethodMetaData.#ctor(AutoBox.MethodHash,AutoBox.Argument[])">
            <summary>
            Initializes the new instance of <see cref="T:AutoBox.MethodMetaData"/> class.
            </summary>
        </member>
        <member name="T:AutoBox.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:AutoBox.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:AutoBox.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:AutoBox.Messages.CantResolveAutoConfigItself">
            <summary>
              Looks up a localized string similar to Can&apos;t resolve type from autoconfig itself..
            </summary>
        </member>
        <member name="P:AutoBox.Messages.NoSuitableCtorToResolve">
            <summary>
              Looks up a localized string similar to No suitable constructor found for {0} to resolve.
            </summary>
        </member>
        <member name="T:AutoBox.MemcachedProvider">
            <summary>
            Defines provider for memcached store.
            </summary>
        </member>
        <member name="M:AutoBox.MemcachedProvider.GetObject(System.String)">
            <summary>
            Gets the cached object for the specific key.
            </summary>
        </member>
        <member name="M:AutoBox.MemcachedProvider.SetObject(System.String,System.Object,System.DateTime)">
            <summary>
            Sets the object to cache store for the specific key and sets the expiry date.
            </summary>
        </member>
        <member name="T:AutoBox.Attributes.VariableAttribute">
            <summary>
            Defines varaible type argument.
            </summary>
        </member>
        <member name="P:AutoBox.AutoBoxSection.Instance">
            <summary>
            Gets or sets the current instance from config.
            </summary>
        </member>
        <member name="P:AutoBox.AutoBoxSection.CacheStore">
            <summary>
            Gets or sets the cache store location.
            </summary>
        </member>
        <member name="P:AutoBox.AutoBoxSection.CacheProvider">
            <summary>
            Gets or sets the cache provider.
            </summary>
        </member>
        <member name="P:AutoBox.Locator.AutoBoxServiceLocator.Container">
            <summary>
            Gets the container associated with this locator.
            </summary>
        </member>
    </members>
</doc>
